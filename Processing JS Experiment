<!DOCTYPE html>
<html lang="en-US">
<head>
  <title>Processing JS Experiment</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Processing JS in webpage experiment">
  <meta name="keywords" content="HTML,CSS,JS,JavaScript">
  <meta name="author" content="Kridtity">
  </head>
<body>
<h1 style="text-align:centre;">Processing JS Experiment</h1>
<canvas id="firstCanvas"></canvas>
</body>
<script src="https://cdn.jsdelivr.net/processing.js/1.4.8/processing.min.js"></script>
<script>
  var programCode = function(processingInstance) {
    with (processingInstance) {
      size(400, 400); 
      frameRate(30);
  
      //Note to myself: RGB colour values for gold, silver, and bronze
      /**

      //Gold
      fill(255, 215, 0);

      //Silver
      fill(192, 192, 192);

      //Bronze
      fill(205, 127, 50);

      **/

      //Sets the values for gold, silver, and bronze
      var value = {
          gold: 100,
          silver: 100,
          bronze: 100
      };

      //Sets the colour for the coins
      var Colour = {
          g: color(255, 215, 0),
          s: color(192, 192, 192),
          b: color(205, 127, 50)
      };

      //Coin configuration/constructor, i.e. x, y, width, height, colour, and onClick
      var Coins = function(config) {
          this.x = config.x || 0;
          this.y = config.y || 0;
          this.width = config.width || 30;
          this.height = config.height || 30;
          this.colour = config.colour;
          this.label = config.label || "Coin";
          this.onClick = config.onClick || function() {};
      };

      //Function that draws/changes the appearance of the coins
      Coins.prototype.draw = function() {
          noStroke();
          fill(this.colour);
          rect(this.x, this.y, this.width, this.height);
          fill(0, 0, 0);
          text(this.label, this.x + 9, this.y + 20);
      };

      //Checks to see if the mouse is inside that instance of the coin
      Coins.prototype.isMouseInside = function() {
          return mouseX > this.x &&
                 mouseX < (this.x + this.width) &&
                 mouseY > this.y &&
                 mouseY < (this.y + this.height);
      };

      //Handles the mouse click
      Coins.prototype.handleMouseClick = function() {
          if(this.isMouseInside()) {
              this.onClick();
          }
      };

      //All new instances of the coins
      var addG = new Coins({
          x: 35,
          y: 150,
          colour: Colour.g,
          label: "P",
          onClick: function() {
              value.gold += 1;
          }
      });
      var addS = new Coins({
          x: 185,
          y: 150,
          colour: Colour.s,
          label: "P",
          onClick: function() {
              value.silver += 1;
          }
      });
      var addB = new Coins({
          x: 335,
          y: 150,
          colour: Colour.b,
          label: "P",
          onClick: function() {
              value.bronze += 1;
          }
      });

      var minG = new Coins({
          x: 35,
          y: 300,
          colour: Colour.g,
          label: "M",
          onClick: function() {
              value.gold -= 1;
          }
      });
      var minS = new Coins({
          x: 185,
          y: 300,
          colour: Colour.s,
          label: "M",
          onClick: function() {
              value.silver -= 1;
          }
      });
      var minB = new Coins({
          x: 335,
          y: 300,
          colour: Colour.b,
          label: "M",
          onClick: function() {
              value.bronze -= 1;
          }
      });

      //The mouseClicked function, e.g. do something when mouse is clicked
      mouseClicked = function() {
          addG.handleMouseClick();
          addS.handleMouseClick();
          addB.handleMouseClick();

          minG.handleMouseClick();
          minS.handleMouseClick();
          minB.handleMouseClick();
      };


      var draw = function() {
          background(255, 255, 255);
          fill(0, 0, 0);
          textSize(16);

          text("Gold: " + value.gold, 10, 20);
          text("Silver: " + value.silver, 10, 40);
          text("Bronze: " + value.bronze, 10, 60);

          addG.draw();
          addS.draw();
          addB.draw();

          minG.draw();
          minS.draw();
          minB.draw();
      };
  
  var canvas = document.getElementById("firstCanvas"); 
  var processingInstance = new Processing(canvas, programCode); 
  </script>
  </html>
